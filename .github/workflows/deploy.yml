name: flowfit CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # (1) 깃 체크아웃
      - name: Check out repository
        uses: actions/checkout@v2

      # (2) ENV 파일 생성
      - name: Create env files
        run: |
          mkdir -p env
          echo "${{ secrets.ENV_VARS }}" > env/prod.env
      # ✅ (2-1) ENV 파일 불러와서 환경변수로 등록
      - name: Load env file into environment
        run: |
          set -a
          source env/prod.env
          set +a
      # (3) JDK 17 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'   # (중요) distribution 지정
          java-version: '17'

      # (4) gradlew 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # (5) Gradle 빌드 (테스트 스킵)
      - name: Build with Gradle (skip tests)
        run: ./gradlew clean build -x test

      # (6) Docker 이미지 빌드
      - name: Build Docker Image
        run: |
          docker build -t $DOCKERHUB_USERNAME/$DOCKERHUB_REPO_NAME:latest .

      # (7) DockerHub 로그인
      - name: DockerHub Login
        run: |
          echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

      # (8) Docker 이미지 푸시
      - name: Push Docker Image
        run: |
          docker push $DOCKERHUB_USERNAME/$DOCKERHUB_REPO_NAME:latest

      # (9) SSH로 서버 접속 후 컨테이너 실행
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USERNAME }}
          key: ${{ env.SERVER_SSH_KEY }}
          script: |
            docker-compose down
            docker image prune -a
            docker pull $DOCKERHUB_USERNAME/$DOCKERHUB_REPO_NAME:latest
            docker-compose up -d